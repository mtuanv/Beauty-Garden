@model ASPNETMVC_Group1.Models.EditTinTucViewModel

@{
	ViewBag.Title = "Sửa tin tức";
	Layout = "~/Views/Shared/_LayoutBackEnd.cshtml";
}
@section breadcumb{
	<li class="breadcrumb-item"><a href="@Url.Action("Index", "QuanLy")">Dashboard</a></li>
	<li class="breadcrumb-item"><a href="@Url.Action("Index", "TinTucs")">Tin tức</a></li>
	<li class="breadcrumb-item active">Sửa</li>
}

@section css{
	<link href="~/Public/BackEnd/dist/css/sweetalert2.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Public/BackEnd/plugins/summernote/summernote-bs4.min.css" rel="stylesheet" type="text/css" />
}
<div class="row">
	<div class="col-md-8">
		<div class="card card-primary">
			<div class="card-header">
				<h3 class="card-title">Thông tin tin tức</h3>
			</div>
			<div class="card-body">
				@using (Html.BeginForm("Edit", "TinTucs", FormMethod.Post, new { id = "editForm", enctype = "multipart/form-data", autocomplete = "off" }))
				{
					@Html.AntiForgeryToken()
					@Html.HiddenFor(model => model.MaTinTuc)
					<div class="form-group">
						<label for="TieuDe" class="control-label col-md-4">
							Tiêu đề
						</label>
						@Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label for="Images" class="control-label col-md-4">
							Banner
						</label>
						<div class="custom-file">
							@Html.TextBoxFor(model => model.Image, "", new { type = "file", @class = "custom-file-input", @onchange = "loadFile(event)" })
							<label class="custom-file-label" for="Images">Chọn ảnh</label>
						</div>
						@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label for="LoaiTinTuc" class="control-label col-md-4">
							Loại tin tức
						</label>
						@Html.DropDownList("LoaiTinTuc", null, "Chọn loại tin tức", htmlAttributes: new { @class = "form-control custom-select" })
						@Html.ValidationMessageFor(model => model.LoaiTinTuc, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label for="NoiBat" class="control-label col-md-4">
							Tin nổi bật
						</label>
						@Html.DropDownList("NoiBat", null, "Chọn làm tin nổi bật", htmlAttributes: new { @class = "form-control custom-select" })
						@Html.ValidationMessageFor(model => model.NoiBat, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-4" })
						@Html.TextAreaFor(model => model.NoiDung, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
					</div>
					<button class="btn btn-success" type="submit" id="submit">Lưu</button>
				}
			</div>
			<!-- /.card-body -->
		</div>
		<!-- /.card -->
	</div>
	<div class="col-md-4">
		<div class="row">
			<div class="col-12">
				<div class="card card-primary">
					<div class="card-header">
						<h3 class="card-title">Ảnh</h3>
					</div>
					<div class="card-body">
						<div class="row">
							<div class="col-12" id="image-append">
								@{
									var ImagePath = "~/wwwroot/News/";
									if (Model.Anh != null) {
										ImagePath += Model.Anh.LinkAnh;
									}
								}
								<img src="@Url.Content(ImagePath)" class="img-thumbnail" />
							</div>

						</div>
					</div>
					<!-- /.card-body -->
				</div>
				<!-- /.card -->
			</div>
			<div class="col-12">
				<div class="row">
					<div class="col-12">
						<a href="@Url.Action("Index")" class="btn btn-secondary">Trở về danh sách</a>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@section scripts{
	<script src="~/Public/BackEnd/plugins/summernote/summernote-bs4.min.js"></script>
	<script src="~/Public/BackEnd/dist/js/sweetalert2.all.min.js"></script>
	<script src="~/Public/BackEnd/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
	<script>
		$(function () {
			bsCustomFileInput.init();
		});
	</script>
	<script>
		//Initialize
		$('#tintuc').addClass('active');
		$('#NoiDung').summernote();
	</script>
	<script>
		//Validate
		var allowed = [".jpg", ".png", ".gif", ".jpeg", "jfif"];
		var regexImage = new RegExp(
			"([a-zA-Z0-9s_\\.-:()])+(" + allowed.join("|") + ")$"
		);
		$(document).ready(function () {
			$('#editForm').keyup(function () {
				if ($('#TieuDe').val().trim() != '' && $('#LoaiTinTuc').val() != '' && $('#NoiBat').val() != '' && $('#NoiDung').val().trim() != '') {
					if (!regexImages()) {
						$('#submit').prop('disabled', true);
					} else {
						$('#submit').prop('disabled', false);
					}
				} else {
					$('#submit').prop('disabled', true);
				}
			});
			$('#editForm').change(function () {
				if ($('#TieuDe').val().trim() != '' && $('#LoaiTinTuc').val() != '' && $('#NoiBat').val() != '' && $('#NoiDung').val().trim() != '') {
					if (!regexImages()) {
						$('#submit').prop('disabled', true);
					} else {
						$('#submit').prop('disabled', false);
					}
				} else {
					$('#submit').prop('disabled', true);
				}
			});
			$('#TieuDe').keyup(function () {
				if ($('#TieuDe').val().trim() == '')
					$('span[data-valmsg-for="TieuDe"]').text('Hãy nhập tiêu đề.');
				else
					$('span[data-valmsg-for="TieuDe"]').text('');
			});
			$('#TieuDe').keydown(function () {
				if ($('#TieuDe').val().trim() == '')
					$('span[data-valmsg-for="TieuDe"]').text('Hãy nhập tiêu đề.');
				else
					$('span[data-valmsg-for="TieuDe"]').text('');
			});
			$('#LoaiTinTuc').keydown(function () {
				if ($('#LoaiTinTuc').val() == '')
					$('span[data-valmsg-for="LoaiTinTuc"]').text('Hãy chọn loại tin tức.');
				else
					$('span[data-valmsg-for="LoaiTinTuc"]').text('');
			});
			$('#LoaiTinTuc').change(function () {
				if ($('#LoaiTinTuc').val() == '')
					$('span[data-valmsg-for="LoaiTinTuc"]').text('Hãy chọn loại tin tức.');
				else
					$('span[data-valmsg-for="LoaiTinTuc"]').text('');
			});
			$('#NoiBat').keydown(function () {
				if ($('#NoiBat').val() == '')
					$('span[data-valmsg-for="NoiBat"]').text('Hãy chọn loại tin nổi bật.');
				else
					$('span[data-valmsg-for="NoiBat"]').text('');
			});
			$('#NoiBat').change(function () {
				if ($('#NoiBat').val() == '')
					$('span[data-valmsg-for="NoiBat"]').text('Hãy chọn loại tin nổi bật.');
				else
					$('span[data-valmsg-for="NoiBat"]').text('');
			});
			$('#Image').keydown(function () {
				if ($("#Image").val() == "") {
				} else {
					if (regexImages()) {
						$('span[data-valmsg-for="Image"]').text("");
					} else {
						$('span[data-valmsg-for="Image"]').text("Định dạng ảnh không phù hợp.");
					}
				}
			});
			$('#Image').change(function () {
				if ($("#Image").val() == "") {
				} else {
					if (regexImages()) {
						$('span[data-valmsg-for="Image"]').text("");
					} else {
						$('span[data-valmsg-for="Image"]').text("Định dạng ảnh không phù hợp.");
					}
				}
			});
			$('#NoiDung').on('summernote.keyup', function (we, e) {
				if ($('#NoiDung').val().trim() == '')
					$('span[data-valmsg-for="NoiDung"]').text('Hãy nhập nội dung.');
				else
					$('span[data-valmsg-for="NoiDung"]').text('');
			});
			$('#NoiDung').on('summernote.keydown', function (we, e) {
				if ($('#NoiDung').val().trim() == '')
					$('span[data-valmsg-for="NoiDung"]').text('Hãy nhập nội dung.');
				else
					$('span[data-valmsg-for="NoiDung"]').text('');
			});
			$('#NoiDung').on('summernote.paste', function (we, e) {
				if ($('#NoiDung').val().trim() == '')
					$('span[data-valmsg-for="NoiDung"]').text('Hãy nhập nội dung.');
				else
					$('span[data-valmsg-for="NoiDung"]').text('');
			});
		});
		function regexImages() {
			var flag = true;
			var files = document.getElementById("Image").files;
			for (var i = 0; i < files.length; i++) {
				if (files[i].name == "") {
					flag = false;
				} else {
					if (!regexImage.test(files[i].name.toLowerCase())) {
						flag = false;
					}
				}
			}
			return flag;
		}
		var loadFile = function (event) {
			$("#image-append").html('');
			var flag = true;
			if ($("#Image").val() == "") {
				flag = false;
			} else {
				var imageUpload = $("#Image")[0];
				if (!regexImage.test(imageUpload.value.toLowerCase())) {
					flag = false;
				}
			}
			if (flag) {
				$("#image-append").append(
					'<img src="' + URL.createObjectURL(event.target.files[0]) + '" class="img-thumbnail"/>'
				);
			}
		};
	</script>
	@if (ViewBag.Error != null)
	{
		<script>
			const swalWithBootstrapButtons = Swal.mixin({
				customClass: {
					confirmButton: 'btn btn-success',
					cancelButton: 'btn btn-danger mr-3'
				},
				buttonsStyling: false
			})
			swalWithBootstrapButtons.fire(
				'Sửa thất bại!',
				"",
				'error'
			)
		</script>
	}
}