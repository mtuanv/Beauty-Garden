@model ASPNETMVC_Group1.Models.ResetPasswordStaffViewModel
@{
	ViewBag.Title = "Đổi mật khẩu";
	Layout = "~/Views/Shared/_LayoutBackEnd.cshtml";
}
@section breadcumb{
	<li class="breadcrumb-item"><a href="@Url.Action("Index", "QuanLy")">Dashboard</a></li>
	<li class="breadcrumb-item"><a href="@Url.Action("Index", "NhanVien")">Nhân viên</a></li>
	<li class="breadcrumb-item active">Đổi mật khẩu</li>
}
<div class="row">
	<div class="col-md-12">
		<div class="card card-primary">
			<div class="card-header">
				<h3 class="card-title">Thông tin nhãn hiệu</h3>
			</div>
			<div class="card-body">
				@using (Html.BeginForm("Password", "NhanVien", new { id = ViewBag.Id }, FormMethod.Post, new { id = "changePassword" }))
				{
					@Html.AntiForgeryToken()
					<input type="hidden" name="Id" id="Id" value="@ViewBag.Id" />
					<div class="form-group">
						@Html.LabelFor(m => m.NewPassword, new { @class = "control-label col-md-2" })
						@Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
						@Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-md-2" })
						@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
						@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
					</div>
					<button class="btn btn-success" type="submit" id="updatePassword">Lưu</button>
				}
			</div>
			<!-- /.card-body -->
		</div>
		<!-- /.card -->
	</div>
</div>
<div class="row">
	<div class="col-12">
		<a href="@Url.Action("Index")" class="btn btn-secondary">Trở về danh sách</a>
	</div>
</div>
@section css{
	<link href="~/Public/BackEnd/dist/css/sweetalert2.min.css" rel="stylesheet" type="text/css" />
}
@section scripts{
	<script src="~/Public/BackEnd/dist/js/sweetalert2.all.min.js"></script>
	<script>
		//Initialize
		$('#nhanvien').addClass('active');
	</script>
	<script>
		//Validate
		$(document).ready(function () {
			$('#updatePassword').prop('disabled', true);
			$('#changePassword').keyup(function () {
				if ($('#NewPassword').val() != '' && $('#ConfirmPassword').val() != '') {
					if ($('#ConfirmPassword').val() !== $('#NewPassword').val()) {
						$('#updatePassword').prop('disabled', true);
					} else {
						$('#updatePassword').prop('disabled', false);
					}
				} else {
					$('#updatePassword').prop('disabled', true);
				}
			});
			$('#NewPassword').keyup(function () {
				if ($('#NewPassword').val() == '')
					$('span[data-valmsg-for="NewPassword"]').text('Hãy nhập mật khẩu mới.');
				else {
					if ($('#NewPassword').val().length < 6)
						$('span[data-valmsg-for="NewPassword"]').text('Mật khẩu có ít nhất 6 kí tự.');
					else
						$('span[data-valmsg-for="NewPassword"]').text('');
				}
			});
			$('#NewPassword').keydown(function () {
				if ($('#NewPassword').val() == '')
					$('span[data-valmsg-for="NewPassword"]').text('Hãy nhập mật khẩu mới.');
				else {
					if ($('#NewPassword').val().length < 6)
						$('span[data-valmsg-for="NewPassword"]').text('Mật khẩu có ít nhất 6 kí tự.');
					else
						$('span[data-valmsg-for="NewPassword"]').text('');
				}
			});
			$('#ConfirmPassword').keyup(function () {
				if ($('#ConfirmPassword').val() == '')
					$('span[data-valmsg-for="ConfirmPassword"]').text('Hãy nhập xác nhận mật khẩu.');
				else {
					if ($('#ConfirmPassword').val() !== $('#NewPassword').val())
						$('span[data-valmsg-for="ConfirmPassword"]').text('Mật khẩu và xác nhận mật khẩu không trùng khớp.');
					else
						$('span[data-valmsg-for="ConfirmPassword"]').text('');
				}
			});
			$('#ConfirmPassword').keydown(function () {
				if ($('#ConfirmPassword').val() == '')
					$('span[data-valmsg-for="ConfirmPassword"]').text('Hãy nhập xác nhận mật khẩu.');
				else {
					if ($('#ConfirmPassword').val() !== $('#NewPassword').val())
						$('span[data-valmsg-for="ConfirmPassword"]').text('Mật khẩu và xác nhận mật khẩu không trùng khớp.');
					else
						$('span[data-valmsg-for="ConfirmPassword"]').text('');
				}
			});
		});
	</script>
	@if (ViewBag.Error != null)
	{
		<script>
			const swalWithBootstrapButtons = Swal.mixin({
				customClass: {
					confirmButton: 'btn btn-success',
					cancelButton: 'btn btn-danger mr-3'
				},
				buttonsStyling: false
			})
			swalWithBootstrapButtons.fire(
				'Đổi thất bại!',
				"",
				'error'
			)
		</script>
	}
}

