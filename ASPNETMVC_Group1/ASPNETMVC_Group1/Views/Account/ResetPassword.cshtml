@model ASPNETMVC_Group1.Models.ResetPasswordViewModel
@{
	ViewBag.Title = "Reset password";
	Layout = "~/Views/Shared/_LayoutFrontEnd.cshtml";
}
<div class="bracum">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<ol class="ol-non">
					<li><a href="javascript:void(0)">Đặt lại mật khẩu </a></li>
				</ol>
			</div>
		</div>
	</div>
</div>
<!-- Register Section Begin -->
<div class="register-login-section spad">
	<div class="container">
		<div class="row">
			<div class="col-lg-6 offset-lg-3">
				<div class="register-form" id="registerForm">
					<h2>Đặt lại mật khẩu</h2>
					@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@Html.HiddenFor(model => model.Code)
						<div class="group-input">
							@Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
							@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
						</div>
						<div class="group-input">
							@Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
							@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
						</div>
						<div class="group-input">
							@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
							@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
						</div>
						<button type="submit" class="btn site-btn register-btn text-white" id="btnSubmit">Đặt lại</button>
					}
				</div>
			</div>

		</div>
	</div>
</div>
<!-- Register Form Section End -->


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
<script>
		const re = /^(([^<>()[\]\\.,;:\s@@"]+(\.[^<>()[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		$(document).ready(function () {
			$('#btnSubmit').prop('disabled', true);
			$('#registerForm').keyup(function () {
				if ($('#Email').val().trim() != '' && $('#Password').val() != '' && $('#ConfirmPassword').val() != '') {
					if (!re.test($('#Email').val()) || $('#Password').val().length < 6 || $('#ConfirmPassword').val() !== $('#Password').val()) {
						$('#btnSubmit').prop('disabled', true);
					} else {
						$('#btnSubmit').prop('disabled', false);
					}
				} else {
					$('#btnSubmit').prop('disabled', true);
				}
			});
			$('#Email').keyup(function () {
				if ($('#Email').val().trim() == '')
					$('span[data-valmsg-for="Email"]').text('Hãy nhập email.');
				else {
					if (!re.test($('#Email').val()))
						$('span[data-valmsg-for="Email"]').text('Email không hợp lệ.');
					else
						$('span[data-valmsg-for="Email"]').text('');
				}
			});
			$('#Email').keydown(function () {
				if ($('#Email').val().trim() == '')
					$('span[data-valmsg-for="Email"]').text('Hãy nhập email.');
				else {
					if (!re.test($('#Email').val()))
						$('span[data-valmsg-for="Email"]').text('Email không hợp lệ.');
					else
						$('span[data-valmsg-for="Email"]').text('');
				}
			});
			$('#Password').keyup(function () {
				if ($('#Password').val() == '')
					$('span[data-valmsg-for="Password"]').text('Hãy nhập mật khẩu.');
				else {
					if ($('#Password').val().length < 6)
						$('span[data-valmsg-for="Password"]').text('Mật khẩu có ít nhất 6 kí tự.');
					else
						$('span[data-valmsg-for="Password"]').text('');
				}
			});
			$('#Password').keydown(function () {
				if ($('#Password').val() == '')
					$('span[data-valmsg-for="Password"]').text('Hãy nhập mật khẩu.');
				else {
					if ($('#Password').val().length < 6)
						$('span[data-valmsg-for="Password"]').text('Mật khẩu có ít nhất 6 kí tự.');
					else
						$('span[data-valmsg-for="Password"]').text('');
				}
			});
			$('#ConfirmPassword').keyup(function () {
				if ($('#ConfirmPassword').val() == '')
					$('span[data-valmsg-for="ConfirmPassword"]').text('Hãy nhập xác nhận mật khẩu.');
				else {
					if ($('#ConfirmPassword').val() !== $('#Password').val())
						$('span[data-valmsg-for="ConfirmPassword"]').text('Mật khẩu và xác nhận mật khẩu không trùng khớp.');
					else
						$('span[data-valmsg-for="ConfirmPassword"]').text('');
				}
			});
			$('#ConfirmPassword').keydown(function () {
				if ($('#ConfirmPassword').val() == '')
					$('span[data-valmsg-for="ConfirmPassword"]').text('Hãy nhập xác nhận mật khẩu.');
				else {
					if ($('#ConfirmPassword').val() !== $('#Password').val())
						$('span[data-valmsg-for="ConfirmPassword"]').text('Mật khẩu và xác nhận mật khẩu không trùng khớp.');
					else
						$('span[data-valmsg-for="ConfirmPassword"]').text('');
				}
			});
		});
</script>
}
